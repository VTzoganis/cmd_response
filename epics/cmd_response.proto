# cmd_response: 
#   simple command/response access via USB to Arduino's I/O capabilities
#
# soft link this file to the IOC's boot directory to be found at run time

#Terminator = LF;
#Terminator = CR;
#Terminator = CR LF;

# TODO: handle error response from Arduino

# ai
ai {
    out "?ai \$1"; in "%d";
}

# longout
ai_mean {
  out "?ai:mean \$1"; in "%d";

  # configure the digital pin for ADC signal averaging
  @init{ 
     #ExtraInput = Ignore;
     out "!ai:watch \$1 1"; in "Ok"; 
  }
}

# bi
bi {
  out "?bi \$1"; in "%d";

  # configure the digital pin for digital input
  @init{
    #ExtraInput = Ignore;
    out "!pin \$1 0"; in "Ok"; 
  }
}

# bo
bo {
  out "!bo \$1 %d"; in "Ok";

  # configure the digital pin for PWM/digital output
  @init{
    #ExtraInput = Ignore;
    out "!pin \$1 1"; in "Ok"; 
  }
}

# longout
pwm {
  out "!pwm \$1 %d"; in "Ok";

  # configure the digital pin for PWM/digital output
  @init{
    #ExtraInput = Ignore;
    out "!pin \$1 1"; in "Ok"; 
  }
}

# ao
period {
  out "!t %d"; in "Ok";
}

# ai
rate {
  ExtraInput = Ignore;
  out "?rate"; in "%d";

  #@mismatch{ in "{ERROR_}%*" }
}

# debug
# {
#     ExtraInput = Ignore;
#     out "%s";
#     in "%39c";
#
#     @mismatch{ in "%*{ERROR_}%*" }
# }

########### SVN repository information ###################
# $Date$
# $Author$
# $Revision$
# $URL$
# $Id$
########### SVN repository information ###################
